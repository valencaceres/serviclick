generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model agent {
  id         String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  channel_id String  @db.Uuid
  name       String  @unique(map: "agent_name_idx") @db.VarChar
  isactive   Boolean @default(true)
}

model assistance {
  id                 String              @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  family_id          String              @db.Uuid
  name               String              @unique(map: "assistance_name_idx") @db.VarChar
  description        String
  cases              casemodel[]
  productassistances productassistance[]
}

model assistancebenefit {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  assistance_id String @db.Uuid
  description   String
}

model assistancedocument {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  assistance_id String @db.Uuid
  document_id   String @db.Uuid

  @@unique([assistance_id, document_id], map: "assistancedocument_idx")
}

model assistanceexclusion {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  assistance_id String @db.Uuid
  description   String
}

model assistancespecialty {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  assistance_id String @db.Uuid
  specialty_id  String @db.Uuid

  @@unique([assistance_id, specialty_id], map: "assistancespecialty_idx")
}

model assistancevalue {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  assistance_id String @db.Uuid
  value_id      String @db.Uuid
  line_order    Int

  @@unique([assistance_id, value_id], map: "assistancevalue_idx")
}

model beneficiary {
  id               String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut              String    @unique(map: "beneficiary_rut_idx") @db.VarChar
  name             String    @db.VarChar
  paternallastname String    @db.VarChar
  maternallastname String    @db.VarChar
  email            String    @db.VarChar
  phone            String    @db.VarChar
  address          String?   @db.VarChar
  district         String?   @db.VarChar
  birthdate        DateTime? @db.Date
  relationship     String?   @db.VarChar
}

model broker {
  id                  String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut                 String  @unique(map: "broker_rut_idx") @db.VarChar
  name                String  @db.VarChar
  legalrepresentative String  @db.VarChar
  line                String  @db.VarChar
  address             String  @db.VarChar
  district            String  @db.VarChar
  email               String  @db.VarChar
  phone               String  @db.VarChar
  logo                String?
  isactive            Boolean @default(true)
  channel_id          String  @default(dbgenerated("'47c5171d-1af8-4442-a2e8-fe680b235220'::uuid")) @db.Uuid
  fantasyname         String? @db.VarChar
}

model brokercontractor {
  id                   String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  type                 String @db.VarChar(1)
  rut                  String @unique(map: "brokercontractor_rut_idx") @db.VarChar
  name                 String @db.VarChar
  paternal_lastname    String @db.VarChar
  maternal_lastname    String @db.VarChar
  legal_representative String @db.VarChar
  line                 String @db.VarChar
  address              String @db.VarChar
  district             String @db.VarChar
  email                String @db.VarChar
  phone                String @db.VarChar
}

model brokerproduct {
  id                 String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  broker_id          String  @db.Uuid
  product_id         String  @db.Uuid
  customerprice      Int
  companyprice       Int
  commisiontype_code String  @db.VarChar(1)
  value              Decimal @db.Decimal
  currency           String  @default(dbgenerated("true")) @db.VarChar
  isactive           Boolean @default(true)
  customer_plan_id   Int?
  company_plan_id    Int?
  baseprice          Int     @default(0)

  @@unique([broker_id, product_id], map: "brokerproduct_idx")
}

model casemodel {
  id               String             @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  createddate      DateTime           @default(now()) @db.Timestamp(6)
  type             String             @db.VarChar(1)
  number           Int                @default(autoincrement())
  applicant_id     String             @db.Uuid
  applicant        insured            @relation(fields: [applicant_id], references: [id])
  product_id       String?            @db.Uuid
  assistance_id    String?            @db.Uuid
  assistance       assistance?        @relation(fields: [assistance_id], references: [id])
  isactive         Boolean            @default(true)
  casereimbursment casereimbursment[]

  @@map("case")
}

model casechat {
  id           String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  case_id      String   @db.Uuid
  casestage_id String   @db.Uuid
  user_id      String   @db.Uuid
  message      String
  type         String   @default("") @db.VarChar(50)
}

model casereimbursment {
  id                 String          @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id            String          @db.Uuid
  casemodel          casemodel       @relation(fields: [case_id], references: [id])
  casestageresult_id String          @db.Uuid
  casestageresult    casestageresult @relation(fields: [casestageresult_id], references: [id])
  user_id            String?         @db.Uuid
  user               user?           @relation(fields: [user_id], references: [id])
  status             String          @default("Pendiente") @db.VarChar
}

model casestage {
  id          String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id     String   @db.Uuid
  createddate DateTime @default(now()) @db.Timestamp(6)
  stage_id    String   @db.Uuid
  user_id     String   @db.Uuid
  description String?
}

model casestageattach {
  id           String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id      String   @db.Uuid
  casestage_id String   @db.Uuid
  document_id  String   @db.Uuid
  file_name    String   @db.VarChar
  mime_type    String   @db.VarChar
  file_date    DateTime @default(now()) @db.Timestamp(6)
  base64       String   @db.VarChar
}

model casestagepartner {
  id             String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id        String    @db.Uuid
  casestage_id   String    @db.Uuid
  partner_id     String    @db.Uuid
  scheduled_date DateTime? @db.Date
  scheduled_time DateTime? @db.Time(6)
  confirmed_date DateTime? @db.Date
  confirmed_time DateTime? @db.Time(6)
}

model casestageresult {
  id               String             @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id          String             @db.Uuid
  casestage_id     String             @db.Uuid
  amount           Decimal?           @db.Decimal
  currency         String?            @default("P") @db.VarChar
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  uf_value         Decimal?           @db.Decimal(10, 2)
  available        Decimal?           @db.Decimal(20, 10)
  casereimbursment casereimbursment[]
}

model casestagespecialist {
  id             String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  case_id        String    @db.Uuid
  casestage_id   String    @db.Uuid
  specialist_id  String    @db.Uuid
  district_id    String    @db.Uuid
  scheduled_date DateTime? @db.Date
  scheduled_time DateTime? @db.Time(6)
  confirmed_date DateTime? @db.Date
  confirmed_time DateTime? @db.Time(6)
}

model channel {
  id       String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  name     String  @unique(map: "channel_name_idx") @db.VarChar
  isbroker Boolean @default(true)
  isactive Boolean @default(true)
  code     String? @db.VarChar
}

model company {
  id                  String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut                 String @unique(map: "company_rut_idx") @db.VarChar
  companyname         String @db.VarChar
  legalrepresentative String @db.VarChar
  line                String @db.VarChar
  address             String @db.VarChar
  district            String @db.VarChar
  email               String @db.VarChar
  phone               String @db.VarChar
}

model cron {
  id              String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  createddate     DateTime  @db.Timestamp(6)
  subscription_id Int
  event           String    @db.VarChar
  processingdate  DateTime? @db.Timestamp(6)
}

model currency {
  id       String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  code     String  @db.VarChar
  name     String  @unique(map: "currency_name_idx") @db.VarChar
  isactive Boolean @default(true)
}

model customer {
  id               String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut              String    @unique(map: "customer_rut_idx") @db.VarChar
  name             String    @db.VarChar
  paternallastname String    @db.VarChar
  maternallastname String    @db.VarChar
  address          String    @db.VarChar
  district         String    @db.VarChar
  email            String    @db.VarChar
  phone            String    @db.VarChar
  birthdate        DateTime? @db.Date
}

model district {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  region_number Int
  region_name   String @db.VarChar
  province_name String @db.VarChar
  district_name String @unique(map: "district_name_idx") @db.VarChar
}

model document {
  id        String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  family_id String  @db.Uuid
  name      String  @unique(map: "document_name_idx") @db.VarChar
  isactive  Boolean @default(true)
}

model donation {
  id              String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  createdate      DateTime @db.Timestamp(6)
  donor_id        String   @db.Uuid
  product_id      String   @db.VarChar
  price           Int
  subscription_id Int
  agent_id        String   @db.Uuid
}

model donor {
  id               String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut              String    @unique(map: "donor_rut_idx") @db.VarChar
  name             String    @db.VarChar
  paternallastname String    @db.VarChar
  maternallastname String    @db.VarChar
  email            String    @db.VarChar
  phone            String    @db.VarChar
  address          String?   @db.VarChar
  district         String?   @db.VarChar
  birthdate        DateTime? @db.Date
}

model family {
  id       String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  name     String  @unique(map: "family_name_idx") @db.VarChar
  isactive Boolean @default(true)
  icon     String  @default("car") @db.VarChar(100)
}

model familyvalue {
  id        String  @id(map: "familyValue_pkey") @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  family_id String  @db.Uuid
  name      String  @db.VarChar
  isactive  Boolean @default(true)

  @@unique([family_id, name], map: "familyvalue_idx")
}

model frequency {
  id          String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  interval_id Int
  code        String  @db.VarChar
  name        String  @unique(map: "frequency_name_idx") @db.VarChar
  isactive    Boolean @default(true)
}

model insured {
  id               String      @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut              String      @unique(map: "insured_rut_idx") @db.VarChar
  name             String      @db.VarChar
  paternallastname String      @db.VarChar
  maternallastname String      @db.VarChar
  address          String      @db.VarChar
  district         String      @db.VarChar
  email            String      @db.VarChar
  phone            String      @db.VarChar
  birthdate        DateTime?   @db.Date
  cases            casemodel[]
}

model lead {
  id               String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  createdate       DateTime @db.Timestamp(6)
  customer_id      String?  @db.Uuid
  company_id       String?  @db.Uuid
  subscription_id  Int?
  isactive         Boolean  @default(true)
  agent_id         String?  @db.Uuid
  paymenttype_code String?  @db.VarChar(1)
  policy_id        String?  @db.Uuid
  link             String?  @db.VarChar
}

model leadbeneficiary {
  lead_id        String @db.Uuid
  insured_id     String @db.Uuid
  beneficiary_id String @db.Uuid

  @@unique([lead_id, insured_id, beneficiary_id], map: "leadbeneficiary_idx")
}

model leadinsured {
  lead_id    String @db.Uuid
  insured_id String @db.Uuid

  @@unique([lead_id, insured_id], map: "leadinsured_idx")
}

model leadproduct {
  lead_id        String  @db.Uuid
  product_id     String  @db.Uuid
  price          Int
  currency_code  String? @db.VarChar
  frequency_code String  @db.VarChar
  productplan_id Int?

  @@unique([lead_id, product_id], map: "leadproduct_idx")
}

model leadproductvalue {
  lead_id    String @db.Uuid
  product_id String @db.Uuid
  insured_id String @db.Uuid
  value_id   String @db.Uuid
  value      String @db.VarChar

  @@unique([lead_id, product_id, insured_id, value_id], map: "leadproductvalue_idx")
}

model partner {
  id                  String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut                 String @db.VarChar
  name                String @db.VarChar
  legalrepresentative String @db.VarChar
  line                String @db.VarChar
  address             String @db.VarChar
  district            String @db.VarChar
  email               String @db.VarChar
  phone               String @db.VarChar
}

model partnerspecialty {
  id           String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  partner_id   String @db.Uuid
  specialty_id String @db.Uuid
}

model payment {
  id               String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  payment_id       Int
  date             DateTime @db.Timestamp(6)
  subscription_id  Int
  amount           Int
  buy_order        String   @db.VarChar
  credit_card_type String   @db.VarChar
  is_recurrent     Boolean
  gateway_response String   @db.VarChar
}

model paymenttype {
  id       String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  code     String  @db.VarChar
  name     String  @unique(map: "paymenttype_name_idx") @db.VarChar
  isactive Boolean @default(true)
}

model person {
  id               String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut              String    @unique(map: "person_rut_idx") @db.VarChar
  name             String    @db.VarChar
  paternallastname String    @db.VarChar
  maternallastname String    @db.VarChar
  email            String    @db.VarChar
  phone            String    @db.VarChar
  isactive         Boolean   @default(true)
  address          String?   @db.VarChar
  district         String?   @db.VarChar
  birthdate        DateTime? @db.Date
  user             user[]
}

model policy {
  id         String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  number     Int       @default(autoincrement())
  createdate DateTime  @db.Date
  startdate  DateTime  @db.Date
  enddate    DateTime? @db.Date
}

model product {
  id                     String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  family_id              String  @db.Uuid
  name                   String  @db.VarChar
  cost                   Int
  customerprice          Int?
  companyprice           Int?
  issubject              Boolean
  frequency              String  @db.VarChar
  term                   String  @db.VarChar
  isactive               Boolean @default(true)
  beneficiaries          Int     @default(0)
  currency               String  @default("P") @db.VarChar(1)
  mininsuredcompanyprice Int?
  dueday                 Int?
}

model productagentprice {
  id             String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  agent_id       String  @db.Uuid
  product_id     String  @db.Uuid
  price_type     String  @default(dbgenerated("true")) @db.VarChar(1)
  price          Int
  isactive       Boolean @default(true)
  feedback_email String? @db.VarChar

  @@unique([agent_id, product_id, price_type], map: "productagentprice_name_idx")
}

model productassistance {
  id            String     @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  product_id    String     @db.Uuid
  assistance_id String     @db.Uuid
  assistance    assistance @relation(fields: [assistance_id], references: [id])
  number        Int
  amount        Decimal?   @db.Decimal
  maximum       String?    @db.VarChar
  events        Int?
  lack          Int?
  currency      String?    @default("P") @db.VarChar

  @@unique([product_id, assistance_id], map: "productassistance_idx")
}

model productcoverage {
  id         String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  product_id String   @db.Uuid
  name       String   @db.VarChar
  amount     String   @db.VarChar
  maximum    String   @db.VarChar
  lack       String   @db.VarChar
  events     String   @db.VarChar
  iscombined Boolean? @default(false)

  @@unique([product_id, name], map: "productcoverage_idx")
}

model productdescription {
  id                String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  product_id        String  @unique(map: "productdescription_name_idx") @db.Uuid
  title             String
  sub_title         String
  description       String
  territorial_scope String
  hiring_conditions String
  alias             String  @default("ServiClick") @db.VarChar
  promotional       String? @db.VarChar
}

model productfamilyvalue {
  product_id     String @db.Uuid
  familyvalue_id String @db.Uuid
  name           String @db.VarChar

  @@id([product_id, familyvalue_id])
  @@unique([product_id, name], map: "productfamilyvalue_idx")
}

model productplan {
  id               String   @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  createdate       DateTime @db.Date
  product_id       String   @db.Uuid
  plan_id          Int      @unique(map: "productplan_idx")
  type             String   @db.VarChar
  price            Int
  frequency        String   @db.VarChar
  agent_id         String   @db.Uuid
  discount_type    String?  @default("n") @db.VarChar
  discount_percent Int?     @default(0)
  discount_cicles  Int?     @default(0)
  baseprice        Int?     @default(0)

  @@unique([product_id, type, agent_id], map: "productplan_product_id_idx")
}

model relationship {
  id   String @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  name String @unique(map: "relationship_idx") @db.VarChar
}

model retail {
  id          String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  rut         String  @unique(map: "retail_rut_idx") @db.VarChar
  name        String  @db.VarChar
  line        String  @db.VarChar
  address     String  @db.VarChar
  district    String  @db.VarChar
  email       String  @db.VarChar
  phone       String  @db.VarChar
  logo        String?
  isactive    Boolean @default(true)
  channel_id  String  @default(dbgenerated("'3e085593-ca72-404f-9013-c1cce7abd60d'::uuid")) @db.Uuid
  fantasyname String? @db.VarChar
}

model retailcampaign {
  id        String @id(map: "retailcontractor_pkey") @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  retail_id String @db.Uuid
  name      String @db.VarChar

  @@unique([retail_id, name], map: "retailcampaing_retail_id_idx")
}

model retaillegalrepresentative {
  id        String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  retail_id String @db.Uuid
  rut       String @db.VarChar
  name      String @db.VarChar

  @@unique([retail_id, rut], map: "retaillegalrepresentative_idx")
}

model retailproduct {
  id                String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  retail_id         String  @db.Uuid
  product_id        String  @db.Uuid
  retailcampaign_id String? @db.Uuid
  companyprice      Int
  currency          String  @default(dbgenerated("true")) @db.VarChar
  isactive          Boolean @default(true)
  normalprice       Int?    @default(0)
  plan_id           Int?

  @@unique([retail_id, product_id], map: "retailproduct_idx")
}

model slug {
  id           String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  code         String @unique(map: "slug_idx") @db.VarChar
  channel_code String @db.VarChar
  agent_id     String @db.Uuid
}

model specialist {
  id        String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  person_id String  @unique(map: "specialist_person_id_idx") @db.Uuid
  isactive  Boolean @default(true)
}

model specialistdistrict {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  specialist_id String @db.Uuid
  district_id   String @db.Uuid

  @@unique([specialist_id, district_id], map: "specialistdistrict_idx")
}

model specialistspecialty {
  id            String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  specialist_id String @db.Uuid
  specialty_id  String @db.Uuid

  @@unique([specialist_id, specialty_id], map: "specialistspecialty_idx")
}

model specialty {
  id        String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  name      String  @unique(map: "specialty_name_idx") @db.VarChar
  family_id String  @db.Uuid
  isactive  Boolean @default(true)
}

model stage {
  id       String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  number   Int     @default(autoincrement())
  name     String  @unique(map: "stage_name_idx") @db.VarChar
  isactive Boolean @default(true)
}

model status {
  id        String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  status_id Int
  name      String  @unique(map: "status_name_idx") @db.VarChar
  isactive  Boolean @default(true)
}

model subscription {
  id                   String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  date                 DateTime  @db.Timestamp(6)
  interval_id          Int?
  status_id            Int?
  subscription_id      Int
  plan_id              Int?
  plan_amount          Int?
  last_payment_date    DateTime? @db.Timestamp(6)
  last_payment_success Boolean?  @default(false)
}

model subscription_history {
  id                String    @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  date              DateTime  @db.Timestamp(6)
  interval_id       Int
  status_id         Int
  subscription_id   Int
  plan_id           Int
  plan_amount       Int
  last_payment_date DateTime? @db.Timestamp(6)
}

model user {
  id               String             @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  person_id        String             @db.Uuid
  person           person             @relation(fields: [person_id], references: [id])
  login            String             @unique(map: "user_email_idx") @db.VarChar
  hash             String?            @db.VarChar
  isactive         Boolean            @default(true)
  type             String             @default("U") @db.VarChar(1)
  isvalid          Boolean            @default(true)
  casereimbursment casereimbursment[]
}

model userbroker {
  id               String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  broker_id        String  @db.Uuid
  rut              String  @db.VarChar
  name             String  @db.VarChar
  paternallastname String  @db.VarChar
  maternallastname String  @db.VarChar
  email            String  @db.VarChar
  hash             String? @db.VarChar
  profilecode      String? @db.VarChar(1)
  isactive         Boolean @default(true)

  @@unique([broker_id, email], map: "userbroker_broker_id_idx")
}

model usercompany {
  id         String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  company_id String  @db.Uuid
  login      String  @unique(map: "usercompany_login_idx") @db.VarChar
  hash       String? @db.VarChar
  isactive   Boolean @default(true)
}

model userinsured {
  id         String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  insured_id String  @db.Uuid
  login      String  @unique(map: "userinsured_login_idx") @db.VarChar
  hash       String? @db.VarChar
  isactive   Boolean @default(true)
}

model userretail {
  id               String  @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  retail_id        String  @db.Uuid
  rut              String  @db.VarChar
  name             String  @db.VarChar
  paternallastname String  @db.VarChar
  maternallastname String  @db.VarChar
  email            String  @db.VarChar
  hash             String? @db.VarChar
  profilecode      String? @db.VarChar(1)
  isactive         Boolean @default(true)

  @@unique([retail_id, email], map: "userretail_retail_id_idx")
}

model value {
  id             String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  family_id      String @db.Uuid
  name           String @unique(map: "value_idx") @db.VarChar
  valuetype_code String @db.VarChar(1)
}

model valueitem {
  id       String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  value_id String @db.Uuid
  number   Int
  name     String @db.VarChar

  @@unique([value_id, name], map: "valueitem_idx")
}

model valuetype {
  id          String @id @default(dbgenerated("public.gen_random_uuid()")) @db.Uuid
  code        String @unique(map: "valuetype_code_idx") @db.VarChar
  name        String @db.VarChar
  description String @db.VarChar
}
